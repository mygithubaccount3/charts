{"version":3,"sources":["components/Registration.js","helpers.js","components/Header.js","components/Task.js","components/Content.js","components/Menu.js","screens/AuthenticatedUserScreen.js","App.js","index.js"],"names":["Registration","e","a","preventDefault","obj","id","firstName","target","value","lastName","email","pass","fetch","method","headers","body","JSON","stringify","then","res","console","log","json","style","textAlign","onSubmit","type","name","placeholder","to","openForm","document","getElementById","display","getElementsByTagName","closeForm","forEach","el","openNewProjectForm","parseDate","date","arr","split","Date","diff","start","end","Math","round","Header","days","dayWidth","isOnMobile","useEffect","func","matches","dayW","Number","slice","length","gridTemplateColumns","addListener","removeListener","Task","min","max","dateStart","dateEnd","projId","taskId","deleteTask","userEmail","userToken","startGrid","endGrid","getMonth","taskElements","getElementsByClassName","i","children","setAttribute","className","ceil","floor","random","onClick","gridArea","backgroundColor","Content","data","elements","taskList","task","startDate","endDate","push","getFullYear","getDate","key","Menu","href","AuthenticatedUserScreen","useState","since","setSince","setMonth","until","setUntil","projects","setProjects","selectedProjects","setSelectedProjects","months","filteredMonCount","maxWidth767","window","matchMedia","width","fetchProjects","credentials","token","apiCall","setFullYear","setDate","els","colForMonth","sendValue","getAttribute","projectId","taskProject","uuidv4","duration","progress","taskProgress","parentId","child","userModelFull","text","fetchUpdated","updatedProjects","projectName","projectStartDate","comment","projectComment","map","htmlFor","onChange","filter","selectedProj","App","isLogged","userInfo","setUserInfo","Cookies","set","cookie","catch","get","path","ReactDOM","render","StrictMode"],"mappings":"4QA8CeA,MA3Cf,WAAwB,4CACpB,WAAsBC,GAAtB,eAAAC,EAAA,6DACID,EAAEE,iBACIC,EAAM,CACRC,GAAI,KACJC,UAAWL,EAAEM,OAAOD,UAAUE,MAC9BC,SAAUR,EAAEM,OAAOE,SAASD,MAC5BE,MAAOT,EAAEM,OAAOG,MAAMF,MACtBG,KAAMV,EAAEM,OAAOI,KAAKH,OAP5B,SASUI,MAAM,+BAAgC,CACxCC,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,mCAEpBC,KAAMC,KAAKC,UAAUb,KACtBc,MAAK,SAACC,GAAD,OAASC,QAAQC,IAAIF,EAAIG,WAhBrC,4CADoB,sBAoBpB,OACI,kBAAC,WAAD,KACI,wBAAIC,MAAO,CAAEC,UAAW,WAAxB,WACA,0BAAMnB,GAAG,UAAUoB,SAvBN,SAAD,oCAwBR,8CACgB,2BAAOC,KAAK,OAAOC,KAAK,YAAYC,YAAY,sBAEhE,6CACe,2BAAOF,KAAK,OAAOC,KAAK,WAAWC,YAAY,qBAE9D,yCACW,2BAAOF,KAAK,QAAQC,KAAK,QAAQC,YAAY,iBAExD,4CACc,2BAAOF,KAAK,WAAWC,KAAK,OAAOC,YAAY,oBAE7D,4BAAQF,KAAK,UAAb,WACA,kBAAC,IAAD,CAAMG,GAAG,KAAT,c,gBCxCT,SAASC,IACZC,SAASC,eAAe,WAAWT,MAAMU,QAAU,QACnDF,SAASG,qBAAqB,QAAQ,GAAGX,MAAMU,QAAU,OAGtD,SAASE,IACH,YAAOJ,SAASG,qBAAqB,SACxCE,SAAQ,SAAAC,GACVA,EAAGd,MAAMU,QAAU,UAEvBF,SAASC,eAAe,WAAWT,MAAMU,QAAU,OAGhD,SAASK,IACZP,SAASC,eAAe,WAAWT,MAAMU,QAAU,QACnDF,SAASC,eAAe,kBAAkBT,MAAMU,QAAU,OAGvD,SAASM,EAAUC,GACtB,IAAMC,EAAMD,EAAKE,MAAM,KACvB,OAAO,IAAIC,KAAKF,EAAI,GAAIA,EAAI,GAAK,EAAGA,EAAI,IAGrC,SAASG,EAAKC,EAAOC,GACxB,OAAOC,KAAKC,OAAOF,EAAMD,GAAP,OCMPI,MA5Bf,YAAqD,IAAnCZ,EAAkC,EAAlCA,GAAIa,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,WAoBlC,OAnBAC,qBAAU,WACN,SAASC,EAAKF,GACV,GAAIA,EAAWG,QAAS,CACpB,IAAMC,EAAS,GAAKN,EAAQO,OAAON,EAASO,MAAM,EAAGP,EAASQ,OAAS,IAAO,IAC9E5B,SAASC,eAAe,UAAUT,MAAMqC,oBAAxC,iBAAwEV,EAAxE,aAAiFM,EAAjF,KACAzB,SAASC,eAAe,aAAaT,MAAMU,QAAU,YAErDF,SAASC,eAAe,UAAUT,MAAMqC,oBAAxC,qBAA4EV,EAA5E,aAAqFC,EAArF,KACApB,SAASC,eAAe,aAAaT,MAAMU,QAAU,QAM7D,OAHAqB,EAAKF,GACLA,EAAWS,YAAYP,GAEhB,WACHF,EAAWU,eAAeR,MAE/B,CAACF,EAAYD,EAAUD,IAGtB,yBAAK7C,GAAG,UACJ,yBAAKA,GAAG,cACPgC,IC8DE0B,MApFf,YAAuI,IAK/H9B,EF2C8B+B,EAAKC,EEhD3Bd,EAAsH,EAAtHA,SAAUD,EAA4G,EAA5GA,KAAMgB,EAAsG,EAAtGA,UAAWC,EAA2F,EAA3FA,QAASxC,EAAkF,EAAlFA,KAAMkB,EAA4E,EAA5EA,MAAOC,EAAqE,EAArEA,IAAKM,EAAgE,EAAhEA,WAAYgB,EAAoD,EAApDA,OAAQC,EAA4C,EAA5CA,OAA8BC,GAAc,EAApCC,UAAoC,EAAzBC,UAAyB,EAAdF,YAGhHG,EAAY,EACZC,EAAU,EAGd,GAAInC,EAAUM,GAAO8B,WAAa,EAAIlB,OAAOS,EAAUR,MAAM,EAAG,IAC5D,GAAInB,EAAUO,GAAK6B,WAAa,EAAIlB,OAAOS,EAAUR,MAAM,EAAG,IAC1DzB,EAAU,YACP,GAAIM,EAAUO,GAAK6B,WAAa,GAAKlB,OAAOS,EAAUR,MAAM,EAAG,KAAOnB,EAAUO,GAAK6B,WAAa,GAAKlB,OAAOU,EAAQT,MAAM,EAAG,IAAK,CAGvIgB,GAFAD,EAAY,IAEW,EADX7B,EAAKL,EAAU2B,GAAY3B,EAAUO,KAEjDb,EAAU,aACHM,EAAUO,GAAK6B,WAAa,EAAIlB,OAAOU,EAAQT,MAAM,EAAG,MAC/De,EAAY,EACZC,EAAUxB,EACVjB,EAAU,cAGPM,EAAUM,GAAO8B,WAAa,GAAKlB,OAAOS,EAAUR,MAAM,EAAG,KAAOnB,EAAUM,GAAO8B,WAAa,GAAKlB,OAAOU,EAAQT,MAAM,EAAG,KACtIe,EAAY7B,EAAKL,EAAU2B,GAAY3B,EAAUM,IAAU,EAEvDN,EAAUO,GAAK6B,WAAa,GAAKlB,OAAOU,EAAQT,MAAM,EAAG,KACzDgB,EAAUD,EAAY7B,EAAKL,EAAUM,GAAQN,EAAUO,IACvDb,EAAU,SACHM,EAAUO,GAAK6B,WAAa,EAAIlB,OAAOU,EAAQT,MAAM,EAAG,MAC/DgB,EAAUxB,EACVjB,EAAU,UAEPM,EAAUM,GAAO8B,WAAa,EAAIlB,OAAOU,EAAQT,MAAM,EAAG,MACjEzB,EAAU,QA8Bd,OA3BAoB,qBAAU,WACN,SAASC,EAAKF,GACV,IAAMwB,EAAe7C,SAAS8C,uBAAuB,QAErD,GAAIzB,EAAWG,QAGX,IAFA,IAAMC,EAAS,GAAKN,EAAQO,OAAON,EAASO,MAAM,EAAGP,EAASQ,OAAS,IAAO,IAErEmB,EAAI,EAAGA,EAAIF,EAAajB,OAAQmB,IACrCF,EAAaE,GAAGC,SAAS,GAAGxD,MAAMU,QAAU,OAC5C2C,EAAaE,GAAGE,aAAa,QAA7B,wCAAuE9B,EAAvE,aAAgFM,EAAhF,gDAGJ,IAAK,IAAIsB,EAAI,EAAGA,EAAIF,EAAajB,OAAQmB,IACrCF,EAAaE,GAAGC,SAAS,GAAGxD,MAAMU,QAAU,QAC5C2C,EAAaE,GAAGE,aAAa,QAA7B,4CAA2E9B,EAA3E,aAAoFC,EAApF,MAQZ,OAHAG,EAAKF,GACLA,EAAWS,YAAYP,GAEhB,WACHF,EAAWU,eAAeR,MAE/B,CAACF,EAAYD,EAAUD,IAGtB,kBAAC,WAAD,KACI,yBAAK+B,UAAU,OAAO5E,GAAE,eFhBE2D,EEgB6B,EFhBxBC,EEgB2B,IFflED,EAAMjB,KAAKmC,KAAKlB,GAChBC,EAAMlB,KAAKoC,MAAMlB,GACVlB,KAAKoC,MAAMpC,KAAKqC,UAAYnB,EAAMD,EAAM,IAAMA,KEczC,yBAAKiB,UAAU,cACX,yBAAKA,UAAU,cAActD,GAC7B,yBAAKsD,UAAU,kBAAkBrC,EAAKL,EAAUM,GAAQN,EAAUO,IAAlE,WACA,0BAAMmC,UAAU,eAAepC,GAHnC,MAGmD,0BAAMoC,UAAU,iBAAiBnC,GAChF,wCACA,4BAAQuC,QAASf,EAAWD,EAAQD,IAApC,WAEJ,yBAAKa,UAAU,cACX1D,MAAO,CACH+D,SAAS,KAAD,OAAOb,EAAP,cAAsBC,GAC9BzC,QAASA,EACTsD,gBAAgB,GAAD,OA3EpB,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,YAAa,YAAa,aA2ExExC,KAAKoC,MAAsB,GAAhBpC,KAAKqC,kBCvCpDI,MArCf,YAA8G,IAA3FrC,EAA0F,EAA1FA,SAAUD,EAAgF,EAAhFA,KAAMgB,EAA0E,EAA1EA,UAAWC,EAA+D,EAA/DA,QAASsB,EAAsD,EAAtDA,KAAMrC,EAAgD,EAAhDA,WAAYmB,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,UAAWF,EAAc,EAAdA,WAEvFoB,EAAW,GA4Bf,OA1BAD,EAAKrD,SAAQ,SAACC,EAAIyC,EAAGrC,GACjBJ,EAAGsD,SAASvD,SAAQ,SAACwD,GACjB,IAAIpD,EAAO,IAAIG,KAAKiD,EAAKC,WACrBC,EAAU,IAAInD,KAAKiD,EAAKE,SAC5B1E,QAAQC,IAAIuE,EAAKC,WACjBzE,QAAQC,IAAIuE,EAAKE,SACjB1E,QAAQC,IAAIuE,GACZF,EAASK,KAAK,kBAAC,EAAD,CAAM7B,UAAWA,EAC3BC,QAASA,EACTxC,KAAMiE,EAAKjE,KACXkB,MAAK,UAAKL,EAAKwD,cAAV,YAA2BxD,EAAKmC,WAAa,GAAK,IAAMnC,EAAKmC,WAAanC,EAAKmC,WAA/E,YAA6FnC,EAAKyD,UAAY,GAAK,IAAMzD,EAAKyD,UAAYzD,EAAKyD,WACpJnD,IAAG,UAAKgD,EAAQE,cAAb,YAA8BF,EAAQnB,WAAa,GAAK,IAAMmB,EAAQnB,WAAamB,EAAQnB,WAA3F,YAAyGmB,EAAQG,UAAY,GAAK,IAAMH,EAAQG,UAAYH,EAAQG,WACvKC,IAAKpB,EACL5B,KAAMA,EACNC,SAAUA,EACVC,WAAYA,EACZgB,OAAQ/B,EAAGhC,GACXgE,OAAQuB,EAAKvF,GACbkE,UAAWA,EACXC,UAAWA,EACXF,WAAYA,WAKxBlD,QAAQC,IAAIqE,GAER,yBAAKrF,GAAG,WACHqF,ICxBES,MATf,WACI,OACI,yBAAK9F,GAAG,UACJ,uBAAG+F,KAAK,UAAR,kBACA,uBAAGA,KAAK,YAAR,mBCsPGC,MArPf,YAA4D,IAAzB9B,EAAwB,EAAxBA,UAAWC,EAAa,EAAbA,UACtChC,EAAO,IAAIG,KADwC,EAE/B2D,mBAAS,GAAD,OAAI9D,EAAKwD,cAAT,YAA0BxD,EAAKmC,WAAa,EAAI,GAAK,KAAOnC,EAAKmC,WAAa,GAAKnC,EAAKmC,WAAa,EAArG,YAA0GnC,EAAKyD,UAAY,GAAK,IAAMzD,EAAKyD,UAAYzD,EAAKyD,YAFrI,mBAElDM,EAFkD,KAE3CC,EAF2C,KAGvDhE,EAAKiE,SAASjE,EAAKmC,WAAa,GAHuB,MAI/B2B,mBAAS,GAAD,OAAI9D,EAAKwD,cAAT,YAA0BxD,EAAKmC,WAAa,EAAI,GAAK,KAAOnC,EAAKmC,WAAa,GAAKnC,EAAKmC,WAAa,EAArG,YAA0GnC,EAAKyD,UAAY,GAAK,IAAMzD,EAAKyD,UAAYzD,EAAKyD,YAJrI,mBAIlDS,EAJkD,KAI3CC,EAJ2C,OAczBL,mBAAS,IAdgB,mBAclDM,EAdkD,KAcxCC,EAdwC,OAeTP,mBAAS,IAfA,mBAelDQ,EAfkD,KAehCC,EAfgC,KAgBjDC,EAAS,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACvFC,EAA8D,IAAzCP,EAAMhD,MAAM,EAAG,GAAK6C,EAAM7C,MAAM,EAAG,KAAagD,EAAMhD,MAAM,EAAG,GAAK6C,EAAM7C,MAAM,EAAG,IAAM,EAChHR,EAAO,EACPgE,EAAcC,OAAOC,WAAW,sBACpC,SAAS9D,EAAK4D,GACVA,EAAY3D,QAAUxB,SAASC,eAAe,UAAUT,MAAM8F,MAAQ,MAAQtF,SAASC,eAAe,UAAUT,MAAM8F,MAAQ,MAGlI,IAAMC,EAAa,uCAAG,8BAAApH,EAAA,sEACIU,MAAM,oCAAqC,CAAE2G,YAAa,UAAWzG,QAAS,CAAEJ,MAAO6D,EAAWiD,MAAOhD,KAD7G,cACZiD,EADY,gBAEKA,EAAQnG,OAFb,OAEZsF,EAFY,OAGlBxF,QAAQC,IAAIuF,EAAS,IACrBC,EAAYD,GAJM,2CAAH,qDAOnBvD,qBAAU,WACNiE,IAEAhE,EAAK4D,GACLA,EAAYrD,YAAYP,GAExB,IAAId,EAAO,IAAIG,KAcf,OAbAZ,SAASC,eAAe,aAAagD,aAAa,MAAlD,UAA4DxC,EAAKwD,cAAjE,YAAkFxD,EAAKmC,WAAa,EAAI,GAAK,KAAOnC,EAAKmC,WAAa,GAAKnC,EAAKmC,WAAa,EAA7J,YAAkKnC,EAAKyD,UAAY,GAAK,IAAMzD,EAAKyD,UAAYzD,EAAKyD,YAEpNzD,EAAKkF,YAAYlF,EAAKwD,cAAgB,GACtCjE,SAASC,eAAe,aAAagD,aAAa,MAAlD,UAA4DxC,EAAKwD,cAAjE,YAAkFxD,EAAKmC,WAAa,EAAI,GAAK,KAAOnC,EAAKmC,WAAa,GAAKnC,EAAKmC,WAAa,EAA7J,YAAkKnC,EAAKyD,UAAY,GAAK,IAAMzD,EAAKyD,UAAYzD,EAAKyD,aAEpNzD,EAAO,IAAIG,KAAK4D,IACXoB,QAAQnF,EAAKyD,UAAY,GAC9BlE,SAASC,eAAe,WAAWgD,aAAa,MAAhD,UAA0DxC,EAAKwD,cAA/D,YAAgFxD,EAAKmC,WAAa,EAAI,GAAK,KAAOnC,EAAKmC,WAAa,GAAKnC,EAAKmC,WAAa,EAA3J,YAAgKnC,EAAKyD,UAAY,GAAK,IAAMzD,EAAKyD,UAAYzD,EAAKyD,YAElNzD,EAAKmF,QAAQnF,EAAKyD,UAAY,GAC9BzD,EAAKiE,SAASjE,EAAKmC,WAAa,GAChC5C,SAASC,eAAe,WAAWgD,aAAa,MAAhD,UAA0DxC,EAAKwD,cAA/D,YAAgFxD,EAAKmC,WAAa,EAAI,GAAK,KAAOnC,EAAKmC,WAAa,GAAKnC,EAAKmC,WAAa,EAA3J,YAAgKnC,EAAKyD,UAAY,GAAK,IAAMzD,EAAKyD,UAAYzD,EAAKyD,YAE3M,WACHiB,EAAYpD,eAAeR,MAEhC,IAEH,IAAK,IAAIwB,EAAI,EAAGA,EAAImC,EAAkBnC,IAClC5B,GAAQ,IAAIP,KAAK,KAAMc,OAAO8C,EAAM7C,MAAM,EAAG,IAAM,EAAIoB,EAAG,GAAGmB,UAOjE,IAJA,IAAI2B,EAAM,GACNC,EAAc,EACZ1E,EAAW,GAAKD,EAAO,IAEpB4B,EAAI,EAAGA,EAAImC,IAAoBnC,EACpC8C,EAAI7B,KAAK,0BAAMG,IAAKnD,KAAKoC,MAAsB,IAAhBpC,KAAKqC,UAAoB7D,MAAO,CAAE+D,SAAS,KAAD,OAAOuC,EAAP,cAAwBA,EAAc,IAAIlF,KAAK,KAAMc,OAAO8C,EAAM7C,MAAM,EAAG,IAAM,EAAIoB,EAAG,GAAGmB,aAAgBe,EAAOvD,OAAO8C,EAAM7C,MAAM,EAAG,IAAM,EAAIoB,KAC3N+C,GAAe,IAAIlF,KAAK,KAAMc,OAAO8C,EAAM7C,MAAM,EAAG,IAAM,EAAIoB,EAAG,GAAGmB,UAGxE,SAAS6B,EAAU7H,GAEf,GADgB,cAAhBA,EAAEM,OAAOF,GAAqBmG,EAASvG,EAAEM,OAAOC,OAASmG,EAAS1G,EAAEM,OAAOC,OACvD,cAAhBP,EAAEM,OAAOF,GAAoB,CAC7B,IAAImC,EAAO,IAAIG,KAAK1C,EAAEM,OAAOC,OAC7BgC,EAAKmF,QAAQnF,EAAKyD,UAAY,GAC9BlE,SAASC,eAAe,WAAWgD,aAAa,MAAhD,UAA0DxC,EAAKwD,cAA/D,YAAgFxD,EAAKmC,WAAa,EAAI,GAAK,KAAOnC,EAAKmC,WAAa,GAAKnC,EAAKmC,WAAa,EAA3J,YAAgKnC,EAAKyD,UAAY,GAAK,IAAMzD,EAAKyD,UAAYzD,EAAKyD,YAElNzD,EAAKmF,QAAQnF,EAAKyD,UAAY,GAC9BzD,EAAKiE,SAASjE,EAAKmC,WAAa,GAChC5C,SAASC,eAAe,WAAWgD,aAAa,MAAhD,UAA0DxC,EAAKwD,cAA/D,YAAgFxD,EAAKmC,WAAa,EAAI,GAAK,KAAOnC,EAAKmC,WAAa,GAAKnC,EAAKmC,WAAa,EAA3J,YAAgKnC,EAAKyD,UAAY,GAAK,IAAMzD,EAAKyD,UAAYzD,EAAKyD,YAClNU,EAAS5E,SAASC,eAAe,WAAW+F,aAAa,SA/EV,4CAmFvD,WAAkC9H,GAAlC,qBAAAC,EAAA,6DACID,EAAEE,iBADN,SAE0BS,MAAM,2CAA4C,CACpE2G,YAAa,UACb1G,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChBkH,UAAW/H,EAAEM,OAAO0H,YAAYzH,MAChCE,MAAO6D,EACPiD,MAAOhD,GAEXzD,KAAMC,KAAKC,UAAU,CACjBZ,GAAI6H,cACJvG,KAAM1B,EAAEM,OAAOoB,KAAKnB,MACpB2H,SAAU,EAEVtC,UAAW5F,EAAEM,OAAOsC,MAAMrC,MAC1BsF,QAAS7F,EAAEM,OAAOuC,IAAItC,MACtB4H,SAAUnI,EAAEM,OAAO8H,aAAa7H,MAChC8H,SAAU,KACVC,MAAO,KACPC,cAAe,SArB3B,cAEUf,EAFV,gBAwB2BA,EAAQgB,OAxBnC,cAwBU7B,EAxBV,gBAyB+BhG,MAAM,oCAAqC,CAAE2G,YAAa,UAAWzG,QAAS,CAAEJ,MAAO6D,EAAWiD,MAAOhD,KAzBxI,cAyBUkE,EAzBV,iBA0BkCA,EAAapH,OA1B/C,QA0BUqH,EA1BV,OA2BI9B,EAAY8B,GACZxG,IACAf,QAAQC,IAAIuF,GA7BhB,6CAnFuD,kEAoHvD,WAAqC3G,GAArC,qBAAAC,EAAA,6DACID,EAAEE,iBADN,SAE0BS,MAAM,uCAAwC,CAChE2G,YAAa,UACb1G,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChBJ,MAAO6D,EACPiD,MAAOhD,GAEXzD,KAAMC,KAAKC,UAAU,CACjBZ,GAAI6H,cACJvG,KAAM1B,EAAEM,OAAOqI,YAAYpI,MAE3BqF,UAAW5F,EAAEM,OAAOsI,iBAAiBrI,MACrCsI,QAAS7I,EAAEM,OAAOwI,eAAevI,MACjCmF,SAAU,OAhBtB,cAEU8B,EAFV,gBAmB2BA,EAAQgB,OAnBnC,cAmBU7B,EAnBV,gBAoB+BhG,MAAM,oCAAqC,CAAE2G,YAAa,UAAWzG,QAAS,CAAEJ,MAAO6D,EAAWiD,MAAOhD,KApBxI,cAoBUkE,EApBV,iBAqBkCA,EAAapH,OArB/C,QAqBUqH,EArBV,OAsBI9B,EAAY8B,GACZxG,IACAf,QAAQC,IAAIuF,GAxBhB,6CApHuD,sBA8KvD,OACI,yBAAK3B,UAAU,OACX,yBAAK5E,GAAG,UAAUgF,QAASlD,IAC3B,kBAAC,EAAD,MACA,0BAAMV,SAlLyC,4CAkLXwD,UAAU,eAC1C,wCACU,2BAAOvD,KAAK,OAAOrB,GAAG,WAAWsB,KAAK,UAEhD,4CACc,2BAAOD,KAAK,OAAOrB,GAAG,eAAesB,KAAK,kBAExD,yCACW,2BAAOD,KAAK,OAAOrB,GAAG,YAAYsB,KAAK,WAElD,uCACS,2BAAOD,KAAK,OAAOrB,GAAG,UAAUsB,KAAK,SAE9C,4CACc,2BAAOD,KAAK,SAASrB,GAAG,eAAesB,KAAK,kBAE1D,0CAEI,4BAAQtB,GAAG,cAAcsB,KAAK,eACzBiF,EAASoC,KAAI,SAAA3G,GAAE,OAAI,4BAAQ7B,MAAO6B,EAAGhC,IAAKgC,EAAGV,WAGtD,4BAAQD,KAAK,UAAb,QAEJ,0BAAMD,SA1MyC,4CA0MRpB,GAAG,kBACtC,wCACU,2BAAOqB,KAAK,OAAOC,KAAK,iBAElC,2CACa,2BAAOD,KAAK,OAAOC,KAAK,oBAErC,8CACgB,2BAAOD,KAAK,OAAOC,KAAK,sBAExC,2CACa,2BAAOD,KAAK,OAAOC,KAAK,oBAErC,4BAAQD,KAAK,UAAb,QAEJ,yBAAKrB,GAAG,UACJ,2BAAO4I,QAAQ,aAAf,UACA,2BAAOvH,KAAK,OAAOrB,GAAG,YAAYsB,KAAK,YAAYnB,MAAO+F,EAAO2C,SAAUpB,IAC3E,2BAAOmB,QAAQ,WAAf,UACA,2BAAOvH,KAAK,OAAOrB,GAAG,UAAUsB,KAAK,UAAUnB,MAAOkG,EAAOwC,SAAUpB,KAE3E,4BAAQoB,SAxDhB,SAA2BjJ,GACvBmB,QAAQC,IAAIuF,EAASuC,QAAO,SAAA9G,GAAE,OAAIA,EAAGV,OAAS1B,EAAEM,OAAOC,UACvD,IAAI4I,EAAexC,EAASuC,QAAO,SAAA9G,GAAE,OAAIA,EAAGV,OAAS1B,EAAEM,OAAOC,SAC9DY,QAAQC,IAAI+H,EAAazF,QACD,IAAxByF,EAAazF,OAAeoD,EAAoBH,GAAYG,EAAoBqC,KAqDxE,4BAAQ5I,MAAM,OAAd,gBACCoG,EAASoC,KAAI,SAAA3G,GAAE,OAAI,gCAASA,EAAGV,UAEpC,4BAAQ0D,QAASvD,GAAjB,YACA,4BAAQuD,QAAS/C,GAAjB,eACA,yBAAKjC,GAAG,SACJ,kBAAC,EAAD,CAAQgC,GAAIuF,EAAK1E,KAAMA,EAAMC,SAAUA,EAAUC,WAAY8D,IAC7D,kBAAC,EAAD,CAAS/D,SAAUA,EACfD,KAAMA,EACNgB,UAAWqC,EACXpC,QAASuC,EACTjB,KAAMqB,EACN1D,WAAY8D,EACZ3C,UAAWA,EACXC,UAAWA,EACXF,WA/FhB,SAAoBD,EAAQD,GACxB,8CAAO,WAAenE,GAAf,qBAAAC,EAAA,6DACHD,EAAEE,iBADC,SAEmBS,MAAM,2CAA4C,CACpE2G,YAAa,UACb1G,OAAQ,SACRC,QAAS,CACL,eAAgB,mBAChBuD,OAAQA,EACR2D,UAAW5D,EACX1D,MAAO6D,EACPiD,MAAOhD,KAVZ,cAEGiD,EAFH,gBAaoBA,EAAQgB,OAb5B,cAaG7B,EAbH,gBAcwBhG,MAAM,oCAAqC,CAAE2G,YAAa,UAAWzG,QAAS,CAAEJ,MAAO6D,EAAWiD,MAAOhD,KAdjI,cAcGkE,EAdH,iBAe2BA,EAAapH,OAfxC,QAeGqH,EAfH,OAgBH9B,EAAY8B,GACZvH,QAAQC,IAAIuF,GAjBT,4CAAP,4DC3FOyC,MAlDf,WAAgB,IAAD,EACmB/C,mBAAS,CAAEgD,UAAU,IADxC,mBACNC,EADM,KACIC,EADJ,iDAGX,WAAsBvJ,GAAtB,SAAAC,EAAA,6DACID,EAAEE,iBADN,SAEUS,MAAM,+BAAgC,CACxCC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CAAEP,MAAOT,EAAEM,OAAOG,MAAMF,MAAOG,KAAMV,EAAEM,OAAOI,KAAKH,UACzEU,MAAK,SAACC,GAAD,OAASA,EAAIG,UAAQJ,MAAK,SAACC,GAE/BsI,IAAQC,IAAI,KAAMvI,EAAIwI,OAAOnJ,OAC7BiJ,IAAQC,IAAI,QAASvI,EAAIT,OACzB8I,EAAY,CAAEF,UAAU,OAEzBM,OAAM,eAdb,4CAHW,sBAsBX,OAAOL,EAASD,SAAW,kBAAC,EAAD,CAAyB/E,UAAWkF,IAAQI,IAAI,SAAUrF,UAAWiF,IAAQI,IAAI,QACxG,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,QACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,KACR,kBAAC,WAAD,KACI,wBAAIvI,MAAO,CAAEC,UAAW,WAAxB,WACA,0BAAMnB,GAAG,WAAWoB,SA/B7B,6CAgCa,yCACW,2BAAOC,KAAK,QAAQC,KAAK,QAAQC,YAAY,iBAExD,4CACc,2BAAOF,KAAK,WAAWC,KAAK,OAAOC,YAAY,oBAE5D,+BACD,kBAAC,IAAD,CAAMC,GAAG,QAAT,WACA,4BAAQH,KAAK,UAAb,iBC9C5BqI,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFlI,SAASC,eAAe,W","file":"static/js/main.711be04c.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Registration() {\r\n    async function signUp(e) {\r\n        e.preventDefault();\r\n        const obj = {\r\n            id: null,\r\n            firstName: e.target.firstName.value,\r\n            lastName: e.target.lastName.value,\r\n            email: e.target.email.value,\r\n            pass: e.target.pass.value\r\n        }\r\n        await fetch('http://localhost:8083/signUp', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json; charset=utf-8'\r\n            },\r\n            body: JSON.stringify(obj),\r\n        }).then((res) => console.log(res.json()));\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 style={{ textAlign: 'center' }}>Sign Up</h1>\r\n            <form id=\"regForm\" onSubmit={signUp}>\r\n                <label>\r\n                    First Name: <input type=\"text\" name=\"firstName\" placeholder=\"Enter first name\" />\r\n                </label>\r\n                <label>\r\n                    Last Name: <input type=\"text\" name=\"lastName\" placeholder=\"Enter last name\" />\r\n                </label>\r\n                <label>\r\n                    Email: <input type=\"email\" name=\"email\" placeholder=\"Enter email\" />\r\n                </label>\r\n                <label>\r\n                    Password: <input type=\"password\" name=\"pass\" placeholder=\"Enter password\" />\r\n                </label>\r\n                <button type=\"submit\">Sign Up</button>\r\n                <Link to=\"/\">Sign In</Link>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Registration;\r\n","export function openForm() {\r\n    document.getElementById('overlay').style.display = 'block';\r\n    document.getElementsByTagName('form')[0].style.display = 'flex';\r\n}\r\n\r\nexport function closeForm() {\r\n    let forms = [...document.getElementsByTagName('form')]\r\n    forms.forEach(el => {\r\n        el.style.display = 'none';\r\n    })\r\n    document.getElementById('overlay').style.display = 'none';\r\n}\r\n\r\nexport function openNewProjectForm() {\r\n    document.getElementById('overlay').style.display = 'block';\r\n    document.getElementById('newProjectForm').style.display = 'flex';\r\n}\r\n\r\nexport function parseDate(date) {\r\n    const arr = date.split('-')\r\n    return new Date(arr[0], arr[1] - 1, arr[2]);\r\n}\r\n\r\nexport function diff(start, end) {\r\n    return Math.round((end - start) / (1000 * 60 * 60 * 24))\r\n}\r\n\r\nfunction secondsDiff(d1, d2) {\r\n    let millisecondDiff = d2 - d1;\r\n    let secDiff = Math.floor((millisecondDiff) / 1000);\r\n    return secDiff;\r\n}\r\n\r\nfunction minutesDiff(d1, d2) {\r\n    let seconds = secondsDiff(d1, d2);\r\n    let minutesDiff = Math.floor(seconds / 60);\r\n    return minutesDiff;\r\n}\r\n\r\nfunction hoursDiff(d1, d2) {\r\n    let minutes = minutesDiff(d1, d2);\r\n    let hoursDiff = Math.floor(minutes / 60);\r\n    return hoursDiff;\r\n}\r\n\r\nexport function daysDiff(d1, d2) {\r\n    let hours = hoursDiff(d1, d2);\r\n    let daysDiff = Math.floor(hours / 24);\r\n    return daysDiff;\r\n}\r\n\r\nexport function getRandomIntInclusive(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n","import React, { useEffect } from 'react';\r\n\r\nfunction Header({ el, days, dayWidth, isOnMobile }) {\r\n    useEffect(() => {\r\n        function func(isOnMobile) {\r\n            if (isOnMobile.matches) {\r\n                const dayW = ((11 / days) + Number(dayWidth.slice(0, dayWidth.length - 1))) + \"%\";\r\n                document.getElementById('months').style.gridTemplateColumns = `repeat(${days}, ${dayW})`;\r\n                document.getElementById('blankCell').style.display = 'none';\r\n            } else {\r\n                document.getElementById('months').style.gridTemplateColumns = `11% repeat(${days}, ${dayWidth})`;\r\n                document.getElementById('blankCell').style.display = 'block';\r\n            }\r\n        }\r\n        func(isOnMobile)\r\n        isOnMobile.addListener(func)\r\n\r\n        return function cleanup() {\r\n            isOnMobile.removeListener(func)\r\n        }\r\n    }, [isOnMobile, dayWidth, days])\r\n\r\n    return (\r\n        <div id='months'>\r\n            <div id='blankCell'></div>\r\n            {el}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport { parseDate, diff, getRandomIntInclusive } from '../helpers.js'\r\n\r\nfunction Task({ dayWidth, days, dateStart, dateEnd, name, start, end, isOnMobile, projId, taskId, userEmail, userToken, deleteTask }) {\r\n    const colors = ['#dfceff', '#c4dcff', '#fec4ff', '#c4f4ff', '#c8ffc4', '#feffc4', '#ffc4c4', '#304c8029', '#8a5858b0', '#10bdb5b0']\r\n\r\n    let startGrid = 0;\r\n    let endGrid = 0;\r\n    let display;\r\n\r\n    if (parseDate(start).getMonth() + 1 < Number(dateStart.slice(5, 7))) {\r\n        if (parseDate(end).getMonth() + 1 < Number(dateStart.slice(5, 7))) {\r\n            display = 'none';\r\n        } else if (parseDate(end).getMonth() + 1 >= Number(dateStart.slice(5, 7)) && parseDate(end).getMonth() + 1 <= Number(dateEnd.slice(5, 7))) {\r\n            startGrid = 2;\r\n            const vis = diff(parseDate(dateStart), parseDate(end))//`2020-${monStart}-01`\r\n            endGrid = startGrid + (1 + (vis));\r\n            display = 'block';\r\n        } else if (parseDate(end).getMonth() + 1 > Number(dateEnd.slice(5, 7))) {\r\n            startGrid = 2;\r\n            endGrid = days;\r\n            display = 'block';\r\n        }\r\n\r\n    } else if (parseDate(start).getMonth() + 1 >= Number(dateStart.slice(5, 7)) && parseDate(start).getMonth() + 1 <= Number(dateEnd.slice(5, 7))) {\r\n        startGrid = diff(parseDate(dateStart), parseDate(start)) + 2;\r\n\r\n        if (parseDate(end).getMonth() + 1 <= Number(dateEnd.slice(5, 7))) {\r\n            endGrid = startGrid + diff(parseDate(start), parseDate(end));\r\n            display = 'block';\r\n        } else if (parseDate(end).getMonth() + 1 > Number(dateEnd.slice(5, 7))) {\r\n            endGrid = days;\r\n            display = 'block';\r\n        }\r\n    } else if (parseDate(start).getMonth() + 1 > Number(dateEnd.slice(5, 7))) {\r\n        display = 'none';\r\n    }\r\n\r\n    useEffect(() => {\r\n        function func(isOnMobile) {\r\n            const taskElements = document.getElementsByClassName('task');\r\n\r\n            if (isOnMobile.matches) {\r\n                const dayW = ((11 / days) + Number(dayWidth.slice(0, dayWidth.length - 1))) + \"%\";\r\n\r\n                for (let i = 0; i < taskElements.length; i++) {\r\n                    taskElements[i].children[0].style.display = 'none';\r\n                    taskElements[i].setAttribute('style', `grid-template-columns: repeat(${days}, ${dayW});margin-top: 11px;margin-bottom: 11px`)\r\n                }\r\n            } else {\r\n                for (let i = 0; i < taskElements.length; i++) {\r\n                    taskElements[i].children[0].style.display = 'block';\r\n                    taskElements[i].setAttribute('style', `grid-template-columns: 11% repeat(${days}, ${dayWidth})`)\r\n                }\r\n            }\r\n        }\r\n\r\n        func(isOnMobile)\r\n        isOnMobile.addListener(func);\r\n\r\n        return function cleanup() {\r\n            isOnMobile.removeListener(func)\r\n        }\r\n    }, [isOnMobile, dayWidth, days])\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className='task' id={`task${getRandomIntInclusive(0, 10000)}`}>\r\n                <div className='task__info'>\r\n                    <div className='task__name'>{name}</div>\r\n                    <div className='task__duration'>{diff(parseDate(start), parseDate(end))} day(s)</div>\r\n                    <span className='task__start'>{start}</span> - <span className='taskInfo__end'>{end}</span>\r\n                    <button>Edit</button>\r\n                    <button onClick={deleteTask(taskId, projId)}>Delete</button>\r\n                </div>\r\n                <div className='task__chart'\r\n                    style={{\r\n                        gridArea: `1/${startGrid}/2/${endGrid}`,\r\n                        display: display,\r\n                        backgroundColor: `${colors[Math.floor(Math.random() * 10)]}`\r\n                    }}>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Task;\r\n","import React from 'react';\r\nimport Task from './Task.js';\r\n\r\nfunction Content({ dayWidth, days, dateStart, dateEnd, data, isOnMobile, userEmail, userToken, deleteTask }) {\r\n\r\n    let elements = [];\r\n\r\n    data.forEach((el, i, arr) => {\r\n        el.taskList.forEach((task) => {\r\n            let date = new Date(task.startDate)\r\n            let endDate = new Date(task.endDate)\r\n            console.log(task.startDate)\r\n            console.log(task.endDate)\r\n            console.log(task)\r\n            elements.push(<Task dateStart={dateStart}\r\n                dateEnd={dateEnd}\r\n                name={task.name}\r\n                start={`${date.getFullYear()}-${date.getMonth() < 10 ? \"0\" + date.getMonth() : date.getMonth()}-${date.getDate() < 10 ? \"0\" + date.getDate() : date.getDate()}`}\r\n                end={`${endDate.getFullYear()}-${endDate.getMonth() < 10 ? \"0\" + endDate.getMonth() : endDate.getMonth()}-${endDate.getDate() < 10 ? \"0\" + endDate.getDate() : endDate.getDate()}`}\r\n                key={i}\r\n                days={days}\r\n                dayWidth={dayWidth}\r\n                isOnMobile={isOnMobile}\r\n                projId={el.id}\r\n                taskId={task.id}\r\n                userEmail={userEmail}\r\n                userToken={userToken}\r\n                deleteTask={deleteTask} />)\r\n        })\r\n\r\n    }\r\n    )\r\n    console.log(elements)\r\n    return (\r\n        <div id='content'>\r\n            {elements}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Content;\r\n","import React from 'react';\r\n\r\nfunction Menu() {\r\n    return (\r\n        <div id='navbar'>\r\n            <a href='#gantt'>Gantt Diagramm</a>\r\n            <a href='#network'>Network Chart</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Menu;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { openForm, closeForm, openNewProjectForm } from '../helpers';\r\nimport Header from '../components/Header.js';\r\nimport Content from '../components/Content.js';\r\nimport Menu from '../components/Menu.js';\r\n\r\nfunction AuthenticatedUserScreen({ userEmail, userToken }) {\r\n    let date = new Date();\r\n    let [since, setSince] = useState(`${date.getFullYear()}-${date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1}-${date.getDate() < 10 ? '0' + date.getDate() : date.getDate()}`);\r\n    date.setMonth(date.getMonth() + 6);\r\n    let [until, setUntil] = useState(`${date.getFullYear()}-${date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1}-${date.getDate() < 10 ? '0' + date.getDate() : date.getDate()}`);\r\n    /*let [data, setData] = useState([\r\n        { name: 'Аналіз аналогічних рішень', start: '2020-06-01', end: '2020-08-04' },\r\n        { name: 'Аналіз аналогічних рішень', start: '2020-01-01', end: '2020-10-15' },\r\n        { name: 'Аналіз аналогічних рішень', start: '2020-08-01', end: '2020-09-04' },\r\n        { name: 'Аналіз аналогічних рішень', start: '2020-06-01', end: '2020-11-04' },\r\n        { name: 'Аналіз аналогічних рішень', start: '2020-04-01', end: '2020-06-04' },\r\n        { name: 'Аналіз аналогічних рішень', start: '2020-02-01', end: '2020-05-04' },\r\n        { name: 'Аналіз аналогічних рішень', start: '2020-09-01', end: '2020-12-04' },\r\n    ]);*/\r\n    let [projects, setProjects] = useState([])\r\n    let [selectedProjects, setSelectedProjects] = useState([])\r\n    const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n    const filteredMonCount = ((until.slice(0, 2) - since.slice(0, 2)) * 12) + (until.slice(5, 7) - since.slice(5, 7)) + 1;\r\n    let days = 0;\r\n    let maxWidth767 = window.matchMedia(\"(max-width: 767px)\")\r\n    function func(maxWidth767) {\r\n        maxWidth767.matches ? document.getElementById('period').style.width = '80%' : document.getElementById('period').style.width = '40%';\r\n    }\r\n\r\n    const fetchProjects = async () => {\r\n        const apiCall = await fetch('http://localhost:8083/project/all', { credentials: 'include', headers: { email: userEmail, token: userToken } })\r\n        const projects = await apiCall.json();\r\n        console.log(projects[0])\r\n        setProjects(projects)\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchProjects();\r\n\r\n        func(maxWidth767);\r\n        maxWidth767.addListener(func);\r\n\r\n        let date = new Date();\r\n        document.getElementById('startDate').setAttribute('min', `${date.getFullYear()}-${date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1}-${date.getDate() < 10 ? '0' + date.getDate() : date.getDate()}`);\r\n\r\n        date.setFullYear(date.getFullYear() + 1);\r\n        document.getElementById('startDate').setAttribute('max', `${date.getFullYear()}-${date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1}-${date.getDate() < 10 ? '0' + date.getDate() : date.getDate()}`);\r\n\r\n        date = new Date(since);\r\n        date.setDate(date.getDate() + 1);\r\n        document.getElementById('endDate').setAttribute('min', `${date.getFullYear()}-${date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1}-${date.getDate() < 10 ? '0' + date.getDate() : date.getDate()}`);\r\n\r\n        date.setDate(date.getDate() - 1);\r\n        date.setMonth(date.getMonth() + 6);\r\n        document.getElementById('endDate').setAttribute('max', `${date.getFullYear()}-${date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1}-${date.getDate() < 10 ? '0' + date.getDate() : date.getDate()}`);\r\n\r\n        return function cleanup() {\r\n            maxWidth767.removeListener(func)\r\n        }\r\n    }, [])\r\n\r\n    for (let i = 0; i < filteredMonCount; i++) {\r\n        days += new Date(2020, Number(since.slice(5, 7)) - 1 + i, 0).getDate()\r\n    }\r\n\r\n    let els = [];\r\n    let colForMonth = 2;\r\n    const dayWidth = 89 / days + '%'\r\n\r\n    for (let i = 0; i < filteredMonCount; ++i) {\r\n        els.push(<span key={Math.floor(Math.random() * 100000)} style={{ gridArea: `1/${colForMonth}/2/${colForMonth + new Date(2020, Number(since.slice(5, 7)) - 1 + i, 0).getDate()}` }}>{months[Number(since.slice(5, 7)) - 1 + i]}</span>)\r\n        colForMonth += new Date(2020, Number(since.slice(5, 7)) - 1 + i, 0).getDate();\r\n    }\r\n\r\n    function sendValue(e) {\r\n        e.target.id === 'startDate' ? setSince(e.target.value) : setUntil(e.target.value);\r\n        if (e.target.id === 'startDate') {\r\n            let date = new Date(e.target.value);\r\n            date.setDate(date.getDate() + 1);\r\n            document.getElementById('endDate').setAttribute('min', `${date.getFullYear()}-${date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1}-${date.getDate() < 10 ? '0' + date.getDate() : date.getDate()}`)\r\n\r\n            date.setDate(date.getDate() - 1);\r\n            date.setMonth(date.getMonth() + 6);\r\n            document.getElementById('endDate').setAttribute('max', `${date.getFullYear()}-${date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1}-${date.getDate() < 10 ? '0' + date.getDate() : date.getDate()}`);\r\n            setUntil(document.getElementById('endDate').getAttribute('max'))\r\n        }\r\n    }\r\n\r\n    async function newTaskFormHandler(e) {\r\n        e.preventDefault();\r\n        const apiCall = await fetch('http://localhost:8083/project/createTask', {\r\n            credentials: 'include',\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                projectId: e.target.taskProject.value,\r\n                email: userEmail,\r\n                token: userToken\r\n            },\r\n            body: JSON.stringify({\r\n                id: uuidv4(),\r\n                name: e.target.name.value,\r\n                duration: 2,\r\n                /*manager: e.target.projectManager.value,*/\r\n                startDate: e.target.start.value,\r\n                endDate: e.target.end.value,\r\n                progress: e.target.taskProgress.value,\r\n                parentId: null,\r\n                child: null,\r\n                userModelFull: null\r\n            })\r\n        })\r\n        const projects = await apiCall.text();\r\n        const fetchUpdated = await fetch('http://localhost:8083/project/all', { credentials: 'include', headers: { email: userEmail, token: userToken } });\r\n        const updatedProjects = await fetchUpdated.json();\r\n        setProjects(updatedProjects)\r\n        closeForm();\r\n        console.log(projects)\r\n        //setOptions(projects)\r\n    }\r\n\r\n    async function newProjectFormHandler(e) {\r\n        e.preventDefault();\r\n        const apiCall = await fetch('http://localhost:8083/project/create', {\r\n            credentials: 'include',\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                email: userEmail,\r\n                token: userToken\r\n            },\r\n            body: JSON.stringify({\r\n                id: uuidv4(),\r\n                name: e.target.projectName.value,\r\n                /*manager: e.target.projectManager.value,*/\r\n                startDate: e.target.projectStartDate.value,\r\n                comment: e.target.projectComment.value,\r\n                taskList: []\r\n            })\r\n        })\r\n        const projects = await apiCall.text();\r\n        const fetchUpdated = await fetch('http://localhost:8083/project/all', { credentials: 'include', headers: { email: userEmail, token: userToken } });\r\n        const updatedProjects = await fetchUpdated.json();\r\n        setProjects(updatedProjects)\r\n        closeForm();\r\n        console.log(projects)\r\n        //setOptions(projects)\r\n    }\r\n\r\n    function deleteTask(taskId, projId) {\r\n        return async function(e) {\r\n            e.preventDefault();\r\n            const apiCall = await fetch('http://localhost:8083/project/deleteTask', {\r\n                credentials: 'include',\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    taskId: taskId,\r\n                    projectId: projId,\r\n                    email: userEmail,\r\n                    token: userToken\r\n                }\r\n            })\r\n            const projects = await apiCall.text();\r\n            const fetchUpdated = await fetch('http://localhost:8083/project/all', { credentials: 'include', headers: { email: userEmail, token: userToken } });\r\n            const updatedProjects = await fetchUpdated.json();\r\n            setProjects(updatedProjects);\r\n            console.log(projects)\r\n            //setOptions(projects)\r\n        }\r\n    }\r\n    \r\n    function selectProjectTask(e) {\r\n        console.log(projects.filter(el => el.name === e.target.value))\r\n        let selectedProj = projects.filter(el => el.name === e.target.value)\r\n        console.log(selectedProj.length)\r\n        selectedProj.length === 0 ? setSelectedProjects(projects) : setSelectedProjects(selectedProj)\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <div id='overlay' onClick={closeForm}></div>\r\n            <Menu />\r\n            <form onSubmit={newTaskFormHandler} className='addTaskForm'>\r\n                <label>\r\n                    Name: <input type='text' id='taskName' name='name' />\r\n                </label>\r\n                <label>\r\n                    Duration: <input type='text' id='taskDuration' name='taskDuration' />\r\n                </label>\r\n                <label>\r\n                    Start: <input type='text' id='taskStart' name='start' />\r\n                </label>\r\n                <label>\r\n                    End: <input type='text' id='taskEnd' name='end' />\r\n                </label>\r\n                <label>\r\n                    Proggres: <input type='number' id='taskProgress' name='taskProgress' />\r\n                </label>\r\n                <label>\r\n                    Project:\r\n                    <select id='taskProject' name='taskProject'>\r\n                        {projects.map(el => <option value={el.id}>{el.name}</option>)}\r\n                    </select>\r\n                </label>\r\n                <button type='submit'>Add</button>\r\n            </form>\r\n            <form onSubmit={newProjectFormHandler} id='newProjectForm'>\r\n                <label>\r\n                    Name: <input type='text' name='projectName' />\r\n                </label>\r\n                <label>\r\n                    Manager: <input type='text' name='projectManager' />\r\n                </label>\r\n                <label>\r\n                    Start Date: <input type='text' name='projectStartDate' />\r\n                </label>\r\n                <label>\r\n                    Comment: <input type='text' name='projectComment' />\r\n                </label>\r\n                <button type='submit'>Add</button>\r\n            </form>\r\n            <div id=\"period\">\r\n                <label htmlFor='startDate'>Since:</label>\r\n                <input type='date' id='startDate' name='startDate' value={since} onChange={sendValue} />\r\n                <label htmlFor='endDate'>Until:</label>\r\n                <input type='date' id='endDate' name='endDate' value={until} onChange={sendValue} />\r\n            </div>\r\n            <select onChange={selectProjectTask}>\r\n                <option value='all'>All projects</option>\r\n                {projects.map(el => <option>{el.name}</option>)}\r\n            </select>\r\n            <button onClick={openForm}>New task</button>\r\n            <button onClick={openNewProjectForm}>New project</button>\r\n            <div id='chart'>\r\n                <Header el={els} days={days} dayWidth={dayWidth} isOnMobile={maxWidth767} />\r\n                <Content dayWidth={dayWidth}\r\n                    days={days}\r\n                    dateStart={since}\r\n                    dateEnd={until}\r\n                    data={selectedProjects}\r\n                    isOnMobile={maxWidth767}\r\n                    userEmail={userEmail}\r\n                    userToken={userToken}\r\n                    deleteTask={deleteTask} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AuthenticatedUserScreen;\r\n","import React, { useState, Fragment } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport Cookies from 'js-cookie';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n} from \"react-router-dom\";\r\nimport Reg from './components/Registration';\r\nimport AuthenticatedUserScreen from './screens/AuthenticatedUserScreen.js';\r\n\r\nfunction App() {\r\n    let [userInfo, setUserInfo] = useState({ isLogged: false });\r\n\r\n    async function signIn(e) {\r\n        e.preventDefault();\r\n        await fetch('http://localhost:8083/signIn', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ email: e.target.email.value, pass: e.target.pass.value }),\r\n        }).then((res) => res.json()).then((res) => {\r\n            //console.log(res);\r\n            Cookies.set('id', res.cookie.value)\r\n            Cookies.set('email', res.email)\r\n            setUserInfo({ isLogged: true });\r\n        //console.log(Cookies.get('id'))\r\n        }).catch(() => {\r\n            //redirect or show error message\r\n        });\r\n    }\r\n\r\n    return userInfo.isLogged ? <AuthenticatedUserScreen userEmail={Cookies.get('email')} userToken={Cookies.get('id')} /> : (\r\n        <Router>\r\n            <Switch>\r\n                <Route path=\"/reg\">\r\n                    <Reg />\r\n                </Route>\r\n                <Route path=\"/\">\r\n                    <Fragment>\r\n                        <h1 style={{ textAlign: 'center' }}>Sign In</h1>\r\n                        <form id=\"authForm\" onSubmit={signIn}>\r\n                            <label>\r\n                                Email: <input type=\"email\" name=\"email\" placeholder=\"Enter email\" />\r\n                            </label>\r\n                            <label>\r\n                                Password: <input type=\"password\" name=\"pass\" placeholder=\"Enter password\" />\r\n                            </label>\r\n                            {'Forgot password? Router here'}\r\n                            <Link to=\"/reg\">Sign Up</Link>\r\n                            <button type=\"submit\">Sign In</button>\r\n                        </form>\r\n                    </Fragment>\r\n                </Route>\r\n            </Switch>\r\n        </Router>\r\n\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}